# Configuring Raspberry PI

# Use the RasPI config tool to enable I2C and serial support
sudo raspi-config

# Basicaaly I followed this tutorial
# https://learn.adafruit.com/setting-up-a-raspberry-pi-as-a-wifi-access-point/install-software
# https://learn.adafruit.com/adafruit-ultimate-gps-on-the-raspberry-pi/setting-everything-up

# The next could be needed when starting the rasp-config tools complains about no language has been set
cat << 'EOF' >> /etc/default/locale
LANG=en_US.UTF-8
LANGUAGE=en_US.UTF-8
LC_ALL=en_US.UTF-8
EOF

# Here is the real installation :-)

# Install dnsmasq
sudo apt-get install dnsmasq

#Configure DNS DHCP (dnsmasq)
# Change or add to the bottom of the configuration fiel
cat << 'EOF' >> /etc/dnsmasq.conf
interface=eth0
interface=wlan0
no-hosts
addn-hosts=/etc/hosts.dnsmasq
dhcp-range=192.168.66.20,192.168.66.150,24h
dhcp-range=192.168.99.20,192.168.99.150,24h
dhcp-option=6,192.168.66.10
dhcp-option=6,192.168.99.10
EOF

# Make the Raspberry PI known on two differen names
cat << 'EOF' > /etc/hosts.dnsmasq
192.168.66.10 cato
192.168.99.10 cato-wired
EOF

# Install hostapd for Raspberry PI
sudo apt-get install hostapd

# Configure hostapd
# Configure the access point
cat << 'EOF' >> /etc/hostpad/hostapd.conf
# Basic configuration
interface=wlan0
ssid=cato
channel=6
hw_mode=g
country_code=NL

# WPA and WPA2 configuration
macaddr_acl=0
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=<dat mag je niet weten!>
wpa_key_mgmt=WPA-PSK
wpa_pairwise=CCMP
rsn_pairwise=CCMP
EOF

# Enable the accesspoint
cat << 'EOF' >> /etc/default/hostapd
DAEMON_CONF="/etc/hostapd/hostapd.conf"
EOF

# Enable forwarding in the kernel permanent
# sudo vi /etc/sysctl.conf
# Search near the end
# net.ipv4.ip_forward=1

# and for now
sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"

# Configure the iptables
sudo iptables -t nat -A POSTROUTING -o usb0 -j MASQUERADE 
sudo iptables -A FORWARD -i usb0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o usb0 -j ACCEPT
sudo iptables -A FORWARD -i usb0 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i eth0 -o usb0 -j ACCEPT
# Save the configuration
sudo sh -c "iptables-save > /etc/network/iptables.forward.nat"

# And activate the configuration after each reboot
cat << 'EOF' >> /etc/network/interfaces
up iptables-resotre < /etc/network/iptables.forward.nat
EOF

# Install GPSD daemon and some tools
sudo apt-get install gpsd gpsd-clients

# Remove 'console=ttyAMA0,115200' and 'kgdboc=ttyAMA0,115200' if present from /boot/cmdline.txt

# Disable some serial services
sudo systemctl mask serial-getty@ttyAMA0.service

# Update gpsd configuration
cat << 'EOF' > /etc/default/gpsd
# Default settings for the gpsd init script and the hotplug wrapper.

# Start the gpsd daemon automatically at boot time
START_DAEMON="true"

# Use USB hotplugging to add new USB devices automatically to the daemon
USBAUTO="true"

# Devices gpsd should collect to at boot time.
# They need to be read/writeable, either by user gpsd or the group dialout.
DEVICES="/dev/ttyAMA0"

# Other options you want to pass to gpsd
GPSD_OPTIONS="-n -G /dev/ttyAMA0"
EOF

# Create startup script for the gpsd service
cat << 'EOF' > /home/pi/start-gpsd
#!/bin/bash
sudo service gpsd start
EOF
# make is executable
chmod +x /home/pi/start-gpsd

# Add the next line to the crontab config, 'sudo crontab -e'
# @reboot /home/pi/start-gpsd

# Start the GPSD daemon
# -G listen on all interfaces
# -n don't wait for clients to connect (start polling the GPS immediately)
# gpsd -G -n /dev/ttyAMA0

# Check if everything is working properly (Optional)
# gpsmon /dev/ttyAMA0

# Enable i2c interface
sudo apt-get install i2c-tools

# Activate I2C modules and configuration
cat << 'EOF' >> /etc/modules
i2c-bcm2708 
i2c-dev
EOF

# Only if not present, so check first!
#cat << 'EOF' >> /boot/config.txt
#dtparam=i2c1=on
#dtparam=i2c_arm=on
#EOF

# Install nodejs
curl -sLS https://apt.adafruit.com/add | sudo bash
sudo apt-get install node
# This gives a segfault :-(
#curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
#sudo apt-get install nodejs

# The next lines might not be needed but unable to verify at this moment
#sudo apt-get install python-smbus
#sudo chmod o+rw /dev/i2c*

# The next lines might not be needed but unable to verify at this moment
# Only needed when running 'gcc' results in a 'unknown program/command'
# Version numbers might be different!
#sudo apt-get install gcc-4.8 g++-4.8
#sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8
#sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9
#sudo update-alternatives --config gcc 

# Install used modules
npm install node-gpsd onoff keypress socket.io nmea-0183
# Due to some error during building lets use a previous version
npm install node-gpsd i2c@0.2.1

# Copy all the JavaScript code, configurations files and scripts to the Raspberry PI
scp *js pi@cato
scp *json pi@cato
scp start-* pi@cato

# Install Apache HTTPD
sudo apt-get install apache2
sudo a2enmod proxy
sudo a2enmod proxy_http

# Add reverse proxy configuration after the last <Directory> element
# sudo vi /etc/apache2/sites-enabled/000-default
#        ProxyPass / http://cato:8080/
#        ProxyPassReverse / http://cato:8080/
# And restart Apache
# sudo service apache2 restart

# RPM 299, 5V  => Offstep = 1900
# RPM 301, 12V => Offstep = 565